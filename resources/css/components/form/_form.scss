// Form elements style
//================

form {
    width: 100%;
}

.field {
    width: 100%;
    margin: 1.5rem 0;
}

// Text inputs style
//================
.field .control {
    width: 100%;
    height: 40px;
    border: 1px solid var(--borders-color);
    border-radius: 5px;

    display: flex;
    justify-content: space-around;
    align-items: center;
    gap: 10px;

    &.is-success {
        --borders-color: rgba(var(--success-color), .5);
    }

    &.is-danger {
        --borders-color: rgba(var(--danger-color), .8);
    }

    &:focus-within {
        box-shadow: 0 0 5px 2px var(--borders-color);
    }
}

.field .label {
    margin-bottom: .7rem;
    display: inline-block;

    font-weight: 600;
}

.field .control .input {
    border: none;
    outline: none;

    width: 100%;
    height: 100%;
    margin: 0 1rem 0 auto;

    background: var(--contrast-text-color);

    font-size: .95rem;

    &::placeholder {
        color: var(--borders-color);
    }
}

// Icon style
//================
.field .control .icon-left {
    margin-left: 10px;
    color: var(--icons-color);
}

// Help text style
//================
.field .help-text {
    font-size: .8rem;
    margin-top: .4rem;

    color: var(--icons-color);

    &.is-danger {
        --icons-color: rgb(var(--danger-color));
    }

    &.is-success {
        --icons-color: rgb(var(--success-color));
    }
}

// Checkbox style (thanks to https://codepen.io/aaroniker/pen/ZEYoxEY)
//===============
input[type='checkbox'],
input[type='radio'] {
    --active: var(--primary-color);
    --active-inner: #fff;
    --focus: 2px darken(var(--primary-color), 80%);
    --border: var(--borders-color);
    --border-hover: var(--primary-color);
    --background: #fff;
    --disabled: #F6F8FF;
    --disabled-inner: #E1E6F9;
    -webkit-appearance: none;
    -moz-appearance: none;
    height: 21px;
    outline: none;
    display: inline-block;
    vertical-align: top;
    position: relative;
    margin: 0 .5rem 0 0;
    cursor: pointer;
    border: 1px solid var(--bc, var(--border));
    background: var(--b, var(--background));
    transition: background .3s, border-color .3s, box-shadow .2s;

    //noinspection CssInvalidFunction
    &:after {
        content: '';
        display: block;
        left: 0;
        top: 0;
        position: absolute;
        transition: transform var(--d-t, .3s) var(--d-t-e, ease), opacity var(--d-o, .2s);
    }

    &:checked {
        --b: var(--active);
        --bc: var(--active);
        --d-o: .3s;
        --d-t: .6s;
        --d-t-e: cubic-bezier(.2, .85, .32, 1.2);
    }

    &:disabled {
        --b: var(--disabled);
        cursor: not-allowed;
        opacity: .9;

        &:checked {
            --b: var(--disabled-inner);
            --bc: var(--border);
        }

        & + label {
            cursor: not-allowed;
        }
    }

    &:hover {
        &:not(:checked) {
            &:not(:disabled) {
                --bc: var(--border-hover);
            }
        }
    }

    &:focus {
        box-shadow: 0 0 0 var(--focus);
    }

    &:not(.switch) {
        width: 21px;

        &:after {
            opacity: var(--o, 0);
        }

        &:checked {
            --o: 1;
        }
    }

    & + label {
        font-size: 14px;
        line-height: 21px;
        display: inline-block;
        vertical-align: top;
        cursor: pointer;
        margin-left: 4px;
    }
}

input[type='checkbox'] {
    &:not(.switch) {
        border-radius: 7px;

        &:after {
            width: 5px;
            height: 9px;
            border: 2px solid var(--active-inner);
            border-top: 0;
            border-left: 0;
            left: 6px;
            top: 3px;
            transform: rotate(var(--r, 20deg));
        }

        &:checked {
            --r: 43deg;
        }
    }

    &.switch {
        width: 38px;
        border-radius: 11px;

        &:after {
            left: 2px;
            top: 2px;
            border-radius: 50%;
            width: 15px;
            height: 15px;
            background: var(--ab, var(--border));
            transform: translateX(var(--x, 0));
        }

        &:checked {
            --ab: var(--active-inner);
            --x: 17px;
        }

        &:disabled {
            &:not(:checked) {
                &:after {
                    opacity: .6;
                }
            }
        }
    }
}

input[type='radio'] {
    border-radius: 50%;

    &:after {
        width: 19px;
        height: 19px;
        border-radius: 50%;
        background: var(--active-inner);
        opacity: 0;
        transform: scale(var(--s, .7));
    }

    &:checked {
        --s: .5;
    }
}

// Buttons style
//===============
.button {
    border: none;
    outline: none;

    font-size: 1rem;

    padding: 1em 1.5em;
    border-radius: 10px;

    background: var(--primary-color);
    color: var(--contrast-text-color);
    font-weight: 600;

    cursor: pointer;
    transition: .1s filter ease-in-out;

    &:hover {
        filter: brightness(95%);
    }

    &.danger {
        --primary-color: rgb(var(--danger-color));
    }

    &.success {
        --primary-color: rgb(var(--success-color));
    }

    &.full-width {
        width: 100%;
    }
}
